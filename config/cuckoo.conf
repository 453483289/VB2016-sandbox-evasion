{
	"UnbalancedStack": {
		"description": "Check if canaries at the top of the stack remains the same after function's call",
		"countermeasures": "Stack adjusting before function call"
	},
	"InfiniteDelay": {
		"description": "Check if INFINITE delay is skipped due to sleep skipping",
		"countermeasures": "Adding of conditional check for INFINITE delay"
	},
	"DelaysAccumulation": {
		"description": "Check if delays accumulation is valid using get time functions",
		"countermeasures": "Usage of per-thread delays accumulation"
	},
	"FunctionHooks": {
		"description": "Check if functions are hooked",
		"countermeasures": "Usage of kernel-mode hooking"
	},
	"AgentArtifacts": {
		"description": "Check if agent artifacts are present in the system",
		"countermeasures": "Reimplement"
	},
	"CuckoomonConfiguration": {
		"description": "Check if cuckoomon configuration files are present in the system",
		"countermeasures": "Reimplement"
	},
	"WhitelistedProcess": {
		"description": "Check if whitelisted process is not tracked (Attention: for the non-sandbox environment it will be always true)",
		"countermeasures": "Reimplement"
	},
	"EventName": {
		"description": "Check if specific event name is present in the system",
		"countermeasures": "Reimplement"
	},
	"RaisedExceptions": {
		"description": "Check if after raising specified number of exceptions, process exits with specific error code",
		"countermeasures": "Reimplement"
	},
	"WMIProcess": {
		"description": "Check if process started using WMI is not tracked (Attention: for the non-sandbox environment it will be always true)",
		"countermeasures": "Reimplement"
	},
	"TaskSchedulerProcess": {
		"description": "Check if process started using Task Scheduler is not tracked (Attention: for the non-sandbox environment it will be always true)",
		"countermeasures": "Reimplement"
	},
	"PidReuse": {
		"description": "Check if reused pid for the process is not tracked (Attention: for the non-sandbox environment it will be always true)",
		"countermeasures": "Reimplement"
	},
	"AgentListener": {
		"description": "Check if agent is present in the system",
		"countermeasures": "Reimplement"
	}
}